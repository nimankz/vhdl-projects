Got it! Here’s a more detailed version of the Persian report with additional explanations on how the BCD-to-Gray conversion works:

---

### **گزارش پروژه: تبدیل BCD به کد گری**

#### **مقدمه**  
در این پروژه، یک ماژول دیجیتال طراحی شده است که وظیفه تبدیل کد BCD (کد دودویی ده‌دهی) به کد گری را بر عهده دارد. کد گری روشی برای نمایش اعداد دودویی است که در آن هر عدد تنها یک بیت تفاوت با عدد قبلی دارد. این ویژگی باعث می‌شود که در تغییرات متوالی مقدار، احتمال بروز خطاهای منطقی کاهش یابد.  

#### **مبانی نظری تبدیل کد BCD به گری**  
برای تبدیل BCD به کد گری، از عملیات منطقی XOR استفاده می‌شود که بر اساس فرمول زیر صورت می‌گیرد:

- **بیت اول (MSB)** کد گری، برابر با بیت اول BCD است:  
  \[
  G3 = B3
  \]
  
- **بیت‌های دیگر** با استفاده از عمل XOR بین بیت‌های متوالی BCD به دست می‌آیند:
  \[
  G2 = B3 \oplus B2
  \]
  \[
  G1 = B2 \oplus B1
  \]
  \[
  G0 = B1 \oplus B0
  \]

در این رابطه، نماد `⊕` نشان‌دهنده‌ی عملگر XOR است که مقدار خروجی آن تنها زمانی ۱ خواهد بود که بیت‌های ورودی مقدار متفاوت داشته باشند. این روش کمک می‌کند که بین دو عدد متوالی، تنها یک بیت تغییر کند.

#### **شرح ماژول VHDL**  
در طراحی این ماژول:
- ابتدا مقدار BCD بررسی می‌شود تا مشخص شود در محدوده‌ی مجاز (۰ تا ۹) قرار دارد.
- اگر مقدار ورودی معتبر باشد، عملیات XOR برای تبدیل آن به گری انجام می‌شود.
- اگر مقدار ورودی نامعتبر باشد، یک سیگنال خطا (`Error`) فعال شده و خروجی به مقدار `0000` تنظیم می‌شود.

#### **تست و اعتبارسنجی**  
برای تأیید عملکرد ماژول، یک **تست بنچ** طراحی شده است که شامل مراحل زیر می‌باشد:
1. بررسی مقادیر **معتبر** BCD (۰ تا ۹) و تأیید تبدیل صحیح به کد گری.
2. بررسی مقادیر **نامعتبر** (۱۰ و بیشتر) و تأیید فعال شدن سیگنال خطا.
3. مشاهده‌ی رفتار خروجی و اطمینان از صحت عملکرد ماژول.

#### **نتیجه‌گیری**  
این ماژول می‌تواند به عنوان بخشی از سیستم‌های دیجیتال مانند **رمزگذارها، انتقال داده‌های سنسوری و کنترل‌کننده‌های منطقی** استفاده شود. همچنین، مفهوم تبدیل **BCD به گری** در طراحی‌های مرتبط با کاهش خطای داده و افزایش پایداری انتقال اطلاعات بسیار کاربردی است.
